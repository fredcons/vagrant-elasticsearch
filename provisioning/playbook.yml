---
- hosts: all
  tasks:

    # Install elasticsearch repository key
    - name: Install elasticsearch repository key
      apt_key: url=https://packages.elastic.co/GPG-KEY-elasticsearch

    - name: Update repositories
      apt_repository: repo={{ item }} state=present update_cache=yes
      with_items: elasticsearch_apt_repos

    - name:  install curl
      apt: pkg=curl state=latest

    - name:  install git
      apt: pkg=git state=latest

    - name: install tree
      apt: pkg=tree state=latest

    - name: install vim
      apt: pkg=vim state=latest

    # Accept Oracle license
    - name: Accept Oracle license prior JDK installation
      shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections; echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections creates=/usr/lib/jvm/java-7-oracle

    # Install Java
    - name: Install dependencies
      apt: pkg={{elasticsearch_apt_java_package}} state=present

    - name:  install elasticsearch
      apt: pkg=elasticsearch=2.2.0 state=present

    - name: Installing ES Plugins by Name
      action: shell bin/plugin install {{ item.name }} chdir={{ elasticsearch_home_dir }}
      when: item.url is not defined
      with_items: elasticsearch_plugins
      ignore_errors: yes

    - name: Installing ES Plugins by URL
      action: shell bin/plugin install {{ item.name }} -url {{ item.url }} chdir={{ elasticsearch_home_dir }}
      when: item.url is defined
      with_items: elasticsearch_plugins
      ignore_errors: yes

    - name: Ensure Elasticsearch is not started on boot
      service: name=elasticsearch enabled=false

    - name: Configure elasticsearch
      template: src=templates/elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml

    - name: Install logstash package
      apt: name=logstash state=latest

    - name: Ensure logstash is not started at boot
      service: name=logstash enabled=false
 
    - name: Configure logstash
      template: src=templates/logstash.conf.j2 dest=/etc/logstash/conf.d/logstash.conf

    - name: Install kibana package
      apt: name=kibana state=latest

    - name: Ensure kibana is not started at boot
      service: name=kibana enabled=false 

    - name: Installing Kibana Plugins by Name
      action: shell bin/kibana plugin -i {{ item.name }} chdir={{ kibana_home_dir }}
      when: item.url is not defined
      with_items: kibana_plugins
      ignore_errors: yes

    - name: Set kibana permissions
      file: path={{ kibana_home_dir }} owner=kibana group=kibana mode=0755 recurse=true state=directory

    - name: Download jq
      get_url: url=http://stedolan.github.io/jq/download/linux64/jq dest=/usr/local/bin/jq mode=0755 

    - name: Install es2unix
      get_url: url=http://download.elasticsearch.org/es2unix/es dest=/usr/bin/es mode=0755

    - name: scripts folder
      file: path=~{{user}}/scripts state=directory owner={{user}} group={{user}} mode=0777

    - name: queries folder
      file: path=~{{user}}/scripts/queries state=directory owner={{user}} group={{user}} mode=0777

    - name: crunchbase config dir
      file: path=/etc/crunchbase state=directory owner=root group=root mode=0777

    - name: crunchbase schema file 
      copy: src=files/mappings.json dest=/etc/crunchbase/mappings.json owner=root group=root mode=0755   

    - name: crunchbase data file
      copy: src=files/companies.bulk.json dest=/etc/crunchbase/companies.bulk.json owner=root group=root mode=0755

    - name: crunchbase load script
      copy: src=files/scripts/load_crunchbase.sh dest=~{{user}}/scripts/load_crunchbase.sh owner={{user}} group={{user}} mode=0755

    - name: reuters config dir
      file: path=/etc/reuters state=directory owner=root group=root mode=0777

    - name: reuters schema file
      copy: src=files/mappings-reuters.json dest=/etc/reuters/mappings.json owner=root group=root mode=0755

    - name: reuters data file
      copy: src=files/articles.bulk.json dest=/etc/reuters/articles.bulk.json owner=root group=root mode=0755

    - name: reuters load script
      copy: src=files/scripts/load_reuters.sh dest=~{{user}}/scripts/load_reuters.sh owner={{user}} group={{user}} mode=0755

    - name: install zsh
      apt: pkg=zsh state=present

    - name: install oh-my-zsh
      git: repo=https://github.com/robbyrussell/oh-my-zsh dest=~/.oh-my-zsh
      sudo: false

    - name: See if zshrc exists
      stat: path=~{{user}}/.zshrc
      register: zshrc_installed
      sudo: false

    - name: Backing up existing ~/.zshrc
      command: mv ~{{user}}/.zshrc ~{{user}}/.zshrc.orig
      when: zshrc_installed.stat.exists
      sudo: false

    - name: Creating new ~/.zshrc
      command: cp ~{{user}}/.oh-my-zsh/templates/zshrc.zsh-template ~{{user}}/.zshrc
      sudo: false

    - name: switch to ZSH
      user: name={{user}} shell=/usr/bin/zsh
      sudo: True

    - name: clustering search script
      copy: src=files/scripts/search_clusters.sh dest=~{{user}}/scripts/search_clusters.sh owner={{user}} group={{user}} mode=0755

    - name: clustering search query
      copy: src=files/scripts/queries/search_clusters_query.json dest=~{{user}}/scripts/queries/search_clusters_query.json owner={{user}} group={{user}} mode=0755

